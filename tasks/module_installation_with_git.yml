---

# Custom module or pack installation using git

- name: 'Clone module or pack repository'
  become: True
  become_user: "{{ shinken_user_name }}"
  git:
    repo: "{{ item.install.repo }}"
    dest: "{{ item.install.dest | default('/tmp/')}}/{{ item.name }}"
    version: "{{ item.install.version | default('HEAD') }}"
  when:
    - "(item.name not in shinken_modules_packs_installed.stdout_lines and item.method == 'custom_git')"


- name: 'Install module or pack'
  become: True
  become_user: "{{ shinken_user_name }}"
  shell: "shinken install --local {{ item.install.dest | default('/tmp') }}/{{ item.name }}"
  when: (item.name not in shinken_modules_packs_installed.stdout_lines and item.method == 'custom_git')


- name: 'Update module or pack'
  become: True
  become_user: "{{ shinken_user_name }}"
  shell: "shinken update --local {{ item.install.dest | default('/tmp') }}/{{ item.name }}"
  when: (item.name not in shinken_modules_packs_installed.stdout_lines and item.method == 'custom_git')


- name: 'Remove clone'
  become: True
  file:
    dest: "{{ item.install.dest | default('/tmp') }}/{{ item.name }}"
    state: 'absent'
